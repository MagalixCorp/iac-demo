apiVersion: magalix.com/v1
kind: Policy
metadata:
  name: magalix.policies.containers-running-with-privilege-escalation
spec:
  id: magalix.policies.containers-running-with-privilege-escalation
  name: Containers Running With Privilege Escalation
  description: description
  how_to_solve: how_to_solve
  category: magalix.categories.pod-security
  severity: high
  targets: 
    kind: 
    - Deployment
    - ReplicationController
    - ReplicaSet
    - StatefulSet
  parameters:
  - name: allow_privilege_escalation
    type: boolean
    required: true
    value: false
  code: |
    package magalix.advisor.podSecurity.privilegeEscalation

    allow_privilege_escalation := input.parameters.allow_privilege_escalation
    violation[result] {
      some i
      containers := controller_spec.containers[i]
      allow_priv := containers.securityContext.allowPrivilegeEscalation
      not allow_priv == allow_privilege_escalation
      result = {
        "msg": sprintf("Container's privilegeEscalation should be set to '%v'; detected '%v'", [allow_privilege_escalation, allow_priv]),
        "violating_key": sprintf("spec.template.spec.containers[%v].securityContext.allowPrivilegeEscalation", [i]),
        "recommended_value": allow_privilege_escalation
      }
    }

    controller_input = input.review.object
    controller_spec = controller_input.spec.template.spec {
      contains_kind(controller_input.kind, {"StatefulSet" , "DaemonSet", "Deployment", "Job"})
    } else = controller_input.spec {
      controller_input.kind == "Pod"
    } else = controller_input.spec.jobTemplate.spec.template.spec {
      controller_input.kind == "CronJob"
    }

    contains_kind(kind, kinds) {
      kinds[_] = kind
    }
